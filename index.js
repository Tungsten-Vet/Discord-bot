const { Client, GatewayIntentBits } = require('discord.js');

const client = new Client({
    intents: [
        GatewayIntentBits.Guilds,
        GatewayIntentBits.GuildMessages,
        GatewayIntentBits.MessageContent
    ]
});

// L·ªánh
const commands = {
    'ping': {
        note: 'Ki·ªÉm tra ƒë·ªô ph·∫£n h·ªìi c·ªßa bot',
        handler: (message) => message.channel.send('üèì Pong!'),
    },
    'hello': {
        note: 'Ch√†o l·∫°i ng∆∞·ªùi d√πng',
        handler: (message) => message.channel.send(`Ch√†o ch√†o c√°i maulon, ${message.author.username} ngu vl!`),
    },
    'ditnhau' : {
        note: '???',
        handler: (message) => message.channel.send('ƒÉn rau'),
    },
    'tung' : {
        note: '???',
        handler: (message) => message.channel.send('tung tung tung tung tung sahur'),
    },
    'bot' : {
        note: 'G·ªçi bot',
        handler: (message) => message.channel.send('X√¨n ch√†o, t√¥i l√† ' + client.user.bot),
    },
};
// Th√™m l·ªánh help
commands['help'] = {
    note: 'Hi·ªÉn th·ªã danh s√°ch l·ªánh',
    handler: (message) => {
        const commandList = Object.entries(commands)
            .map(([name, obj]) => `‚Ä¢ /${name} ‚Äì ${obj.note}`)
            .join('\n');
        message.channel.send(`üìÉ Danh s√°ch l·ªánh:\n${commandList}`);
    },
};

client.once('ready', () => {
    console.log(`ü§ñ Bot ƒë√£ s·∫µn s√†ng v·ªõi t√™n: ${client.user.tag}`);
    message.channel.send("Bot ƒëang ho·∫°t ƒë·ªông");
});

client.on('messageCreate', (message) => {
    if (message.author.bot) return;
    if (!message.content.startsWith('/')) return;
    
    const command = message.content.slice(1);
    const cmdObj = commands[command];

    if (cmdObj && typeof cmdObj.handler === 'function') {
        cmdObj.handler(message);
    }
});

// ‚ö†Ô∏è THAY TOKEN d∆∞·ªõi b·∫±ng token th·∫≠t c·ªßa bot b·∫°n
client.login(process.env.DISCORD_BOT_TOKEN);
